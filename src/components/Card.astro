---

interface Props {
  left?: string
  top?: string
  scale?: string
  rotation?: string
}

const {left, rotation, scale, top} = Astro.props
---


<div style={`--top: ${top}; --left: ${left}; --rotate: ${rotation}; --scale: ${scale ?? '100%'}`} class="card">
  <slot/>
  <span> lorempin lor lorempin su sum lorem loremiptsum </span>
</div>

<style>
  :root {
  --top: 0;
  --left: 0;
  --rotate: 10deg;
  --scale: 0%;
  }

  .card {
    position: absolute;
    top: var(--top);
    left: var(--left);
    box-shadow: 0px 8px 16px rgba(0, 0, 0, 0.25);
    border: none;
    background-color: #212121;
    color: #ffffff6b;
    font: var(--card-ui);
    display: flex;
    flex-direction: column;
    gap: 15px;
    align-items: center;
    justify-content: center;
    padding: 15px;
    border-radius: 10px;
    animation: fadeIn 1.3s ease-in-out forwards;
    overflow: hidden;
    cursor: pointer;
    height: 200px;

    * {
      z-index: 1;
    }

    span {
      max-inline-size: 130px;
      text-align: center;
    }
  }

  .card::before {
    opacity: 0;
    content: '';
    position: absolute;
    height: 250px;
    width: 250px;
    background-image: conic-gradient(var(--yellow) 20deg, transparent 120deg);
  }

  .card:hover::before {
    animation: rotate 1s linear;
  }

  .card::after {
    content: '';
    position: absolute;
    width: 155px;
    height: 195px;
    border-radius: 10px;
    background-color: #212121;
  }

  @keyframes fadeIn {
    from {
      opacity: 0;
      transform: translateY(var(--top)) translateX(var(--left)) rotate(var(--rotate)) scale(var(--scale));
    }
    to {
      opacity: 1;
      transform: translateY(0px) translateX(0px) rotate(var(--rotate)) scale(var(--scale));
    }
  }

  @keyframes moveToRight {
    from {
      opacity: 0;
      transform: translateX(-100%);
    }
    to {
      opacity: 1;
      top: 0;
      right: 0;
      transform: translateX(0);
    }
  }

  @keyframes rotate {
    from {
      opacity: 1;
      transform: rotate(0deg);
    }
    to {
      transform: rotate(360deg);
      opacity: 0;
    }
  }
</style>
